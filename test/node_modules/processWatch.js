// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.


var assert = require('assert');

//function to test if a pid is alive
exports.alive = function (pid) {

  try {
    //this will throw an error if the process is dead
    process.kill(pid, 0);

    return true;
  } catch (e) {
    return false;
  }
};

//Watch a process given by a pid, and call callback when it dies
exports.watch = function (pid, callback, tries) {

  //default tries to 0
  tries = tries || 0;

  //if process is alive call callback
  if (exports.alive(pid) === false) {
    callback();
    return;
  }

  //Else check tries and throw error if its 20
  assert.notEqual(tries, 20, "timeout, too many tries");

  //Try again in 100 ms
  setTimeout(function () {
    exports.watch(pid, callback, tries + 1);
  }, 100);
};
