// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.


// Small progress racker
function ProgressTracker(callback) {
  this.callback = callback;
  this.states = {};
  this.called = false;
}
ProgressTracker.prototype.add = function(subject) {
  if (typeof subject === 'object') {
    var name;
    for (name in subject) {
      if (subject.hasOwnProperty(name)) this.states[name] = false;
    }
  } else {
    this.states[subject] = false;
  }
};
ProgressTracker.prototype.set = function(name) {
  this.states[name] = true;
  this.check();
};
ProgressTracker.prototype.check = function(name) {
  var state;
  for (state in this.states) {
    if (this.states.hasOwnProperty(state) && this.states[state] === false) {
      return;
    }
  }
  if (typeof this.callback === 'function' && !this.called) {
    this.callback();
  }
  this.called = true;
};

module.exports = ProgressTracker;